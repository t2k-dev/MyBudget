@model MyBudget.ViewModels.MyListViewModel
@{
    ViewBag.Title = "MyList";
    Layout = "~/Views/Shared/_Layout.cshtml";
}



<div class="row">
    <div class="col-md-8">
        <div class="row" style="user-select:none;">
            <div class="col-md-7 text-center">
                <div class="container">
                    <div class="row" style="margin-bottom:20px;">
                        <div style="margin: 0 auto;">
                            <span class="glyphicon glyphicon-menu-left cal-switch" onclick="setingDate(2)"></span>
                            <input type="button" id="sandbox-container" value="@Model.ListDate">
                            <span class="glyphicon glyphicon-menu-right cal-switch" onclick="setingDate(1)"></span>
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-md-4 offset-md-1">
                <a class="btn btn-outline-danger new-trans" href="@Url.Action("TransactionForm", "Transactions", new { id=true} )"><span class="glyphicon glyphicon-minus"></span></a>
                <a class="btn btn-outline-success new-trans" href="@Url.Action("TransactionForm", "Transactions", new { id=false} )"><span class="glyphicon glyphicon-plus"></span></a>
            </div>
        </div>
        <div class="row">
            @if (Model.MyTransactions.Count == 0)
            {

                <h6 class="no-records">В этом месяце ещё нет платежей</h6>
            }
            else
            {
                <table class="table table-hover tbl-myList">
                    <thead>
                        <tr>
                            <th scope="col" style="width: 20px;"></th>
                            <th scope="col">Наименование</th>
                            <th scope="col" style="width:25%;text-align:right;">Сумма</th>
                            <th scope="col" style="width: 60px;"></th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var transaction in Model.MyTransactions)
                        {
                            <tr>
                                <td class="text-center">
                                    @{ 
                                        string btn_planed = "";
                                        if (transaction.IsPlaned)
                                        {
                                            btn_planed = "itm-opacity";
                                        }
                                    }
                                    @Html.ActionLink(" ", "ChangeIsPlaned", "Transactions", new { id = transaction.Id }, new { @class = "glyphicon glyphicon-ok-circle glyph-btn occurred "+ btn_planed })
                                    
                                </td>

                                <td onclick="window.location.href = '/Transactions/Edit/'+@transaction.Id;">
                                    @transaction.Name

                                </td>
                                <td class="text-right" onclick="window.location.href = '/Transactions/Edit/'+@transaction.Id;">
                                    @{
                                        string lineClass = "";
                                        char c = '+';
                                        if (transaction.IsSpending == true) { lineClass = "text-danger"; c = '-'; }
                                        else { lineClass = "text-success"; }
                                    }

                                    @Html.Label(@c + @transaction.Amount.ToString("### ### ### ###"), new { @class = lineClass + " amt" })
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-link glyph-btn js-del-tr" data-toggle="modal" data-target="#DelTransactionModal" data-tr-id="@transaction.Id">
                                        <span class="glyphicon glyphicon-remove"></span>
                                    </button>
                                </td>

                            </tr>
                        }
                    </tbody>
                </table>
            }
        </div>
    </div>

    <div class="col-md-3 offset-md-1">
        <div class="card text-white bg-success mb-3">
            <div class="card-header">
                <h5 class="text-center">Баланс</h5>
            </div>
            <div class="card-body crd-rest-body">
                <table class="tbl-rest">
            		<tr>            			
            			<td class="rest-type">Текущий:</td>
            			<td class="rest-real">
                            @if (Model.Rest == 0)
                            {
                                <span>0</span>
                            }
                            else
                            {
                                string rst_class = "";
                                if (Model.Rest < 0)
                                {
                                    rst_class = "text-danger";
                                }
                                <span class="@rst_class">@Model.Rest.ToString("### ### ### ###")</span>
                            }

                        </td>
                    </tr>
            		<tr>            			
            			<td class="rest-type">Плановый:</td>
            			<td class="rest-planed">
                            @if (Model.PlanedRest == 0)
                            {
                                <span>0</span>
                            }
                            else
                            {
                                string rst_class = "";
                                if (Model.PlanedRest < 0)
                                {
                                    rst_class = "text-danger";
                                }

                                <span class="@rst_class">@Model.PlanedRest.ToString("### ### ### ###")</span>
                            }

                        </td>
            		</tr>
            	</table>

                
                

            </div>
        </div>

        <hr>

        <div class="card text-white bg-info mb-3">
            <div class="card-header">
                <a class="crd-add" href="@Url.Action("GoalForm", "Goals" )"><span class="glyphicon glyphicon-plus"></span></a>
                <h5>Цели</h5>
            </div>

            @if (Model.MyGoals.Where(x => x.Type == 1).Count() != 0)
            {
                <div class="card-body">
                    @foreach (var goal in Model.MyGoals.Where(x => x.Type == 1))
                    {
                        <div class="crd-itm">
                            <div class="crd-content">
                                <div class="float-right">@Html.ActionLink(" ", "Delete", "Goals", new { id = goal.Id }, new { @class = "glyphicon glyphicon-remove del-btn-crd" })</div>
                                <button type="button" class="btn btn-link crd-caption js-pay-goal" data-toggle="modal" data-target="#myModal" data-goal-id="@goal.Id" data-catType="SYS_5">
                                    @goal.GoalName<span class="glyphicon glyphicon-cloud-download pay-goal"></span>
                                </button>
                                <h6>
                                    @{
                                        string cA;
                                        if (@goal.CurAmount > 0) { cA = @goal.CurAmount.ToString("### ### ### ###"); } else { cA = "0"; }
                                    }
                                    <span>@cA из @goal.Amount.ToString("### ### ### ###") </span>
                                </h6>
                            </div>
                            @{
                                string progress = (@goal.CurAmount * 100 / @goal.Amount).ToString(System.Globalization.CultureInfo.GetCultureInfo("en-US"));
                            }
                            <div class="progress progress-goal">
                                <div class="progress-bar progress-bar-goal" style="width:@progress%;"></div>
                            </div>
                        </div>
                    }
                </div>
            }

        </div>

        <div class="card text-white bg-danger mb-3">
            <div class="card-header">
                <a class="crd-add" href="@Url.Action("DebtForm", "Goals" )"><span class="glyphicon glyphicon-plus"></span></a>
                <h5>Я должен</h5>
            </div>

            @if (Model.MyGoals.Where(x => x.Type == 2).Count() != 0)
            {
                <div class="card-body">
                    @foreach (var debt in Model.MyGoals.Where(x => x.Type == 2))
                    {
                        <div class="crd-itm">
                            <div class="crd-content">
                                <div class="float-right">@Html.ActionLink(" ", "Delete", "Goals", new { id = debt.Id }, new { @class = "glyphicon glyphicon-remove del-btn-crd" })</div>
                                <button type="button" class="btn btn-link crd-caption js-pay-goal" data-toggle="modal" data-target="#myModal" data-goal-id="@debt.Id" data-catType="SYS_3">
                                    @debt.GoalName<span class="glyphicon glyphicon-cloud-download pay-goal"></span>
                                </button>
                                <h6>
                                    @{
                                        string cA;
                                        if (@debt.CurAmount > 0) { cA = @debt.CurAmount.ToString("### ### ### ###"); } else { cA = "0"; }
                                    }
                                    <span>@cA из @debt.Amount.ToString("### ### ### ###")</span>
                                </h6>
                            </div>

                            @{
                                string progress = (@debt.CurAmount * 100 / @debt.Amount).ToString(System.Globalization.CultureInfo.GetCultureInfo("en-US"));
                            }
                            <div class="progress progress-debt">
                                <div class="progress-bar progress-bar-debt" style="width:@progress%;"></div>
                            </div>


                        </div>

                    }
                </div>
            }
        </div>


        <div class="card text-white bg-credit mb-3">
            <div class="card-header">
                <a class="crd-add" href="@Url.Action("CreditForm", "Goals" )" title="Добавить"><span class="glyphicon glyphicon-plus"></span></a>
                <h5>Мне должны</h5>
            </div>

            @if (Model.MyGoals.Where(x => x.Type == 3).Count() != 0)
            {
                <div class="card-body">
                    @foreach (var debt in Model.MyGoals.Where(x => x.Type == 3))
                    {
                        <div class="crd-itm">
                            <div class="crd-content">
                                <div class="float-right">@Html.ActionLink(" ", "Delete", "Goals", new { id = debt.Id }, new { @class = "glyphicon glyphicon-remove del-btn-crd" })</div>
                                <button type="button" class="btn btn-link crd-caption js-pay-goal" data-toggle="modal" data-target="#myModal" data-goal-id="@debt.Id" data-catType="SYS_1">
                                    @debt.GoalName<span class="glyphicon glyphicon-cloud-download pay-goal"></span>
                                </button>
                                <h6>
                                    @{
                                        string cA;
                                        if (@debt.CurAmount > 0) { cA = @debt.CurAmount.ToString("### ### ### ###"); } else { cA = "0"; }
                                    }
                                    <span>@cA из @debt.Amount.ToString("### ### ### ###")</span>
                                </h6>
                            </div>
                            @{
                                string progress = (@debt.CurAmount * 100 / @debt.Amount).ToString(System.Globalization.CultureInfo.GetCultureInfo("en-US"));
                            }
                            <div class="progress progress-credit">
                                <div class="progress-bar progress-bar-credit" style="width:@progress%;"></div>
                            </div>



                        </div>

                    }
                </div>
            }
        </div>
    </div>
</div>

    <!-- Modal -->
    <div class="modal fade" id="myModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="close close-mdl" data-dismiss="modal" aria-label="Close"><span aria-hidden="true" class="glyphicon glyphicon-remove"></span></div>

                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("PutMoney", "Goals"))
                    {
                        <div style="text-align:center">
                            <div class="form-group">
                                <label for="Amount">Сумма</label>
                                <input type="text" id="Amount" name="Amount" class="form-control-lg" style="margin-left:10px;" autocomplete="off" />
                                <input type="hidden" id="putOnId" name="putOnId" />
                                <input type="hidden" id="catType" name="catType" />
                            </div>
                            <div class="modal-footer">
                                <button type="submit" class="btn btn-success" style="margin:0 auto;">Пополнить</button>
                            </div>
                        </div>
                    }


                </div>

            </div>
        </div>
    </div>

    <!--Удаление транзакции-->
    <div class="modal fade" id="DelTransactionModal" tabindex="-1" role="dialog" aria-labelledby="myModalLabel">
        <div class="modal-dialog" role="document">
            <div class="modal-content">
                <div class="modal-header">
                    <div class="close close-mdl" data-dismiss="modal" aria-label="Close"><span aria-hidden="true" class="glyphicon glyphicon-remove"></span></div>
                </div>
                <div class="modal-body">
                    @using (Html.BeginForm("Delete", "Transactions"))
                    {
                        <div style="text-align:center">
                            <div class="form-group">
                                <label for="Amount">Удалить выбранную транзакцию?</label>
                                <input type="hidden" id="transId" name="Id" />                                
                            </div>
                            <div class="modal-footer">
                                <button type="button" data-dismiss="modal" class="btn btn-default" style="margin:0 auto;">Нет</button>
                                <button type="submit" class="btn btn-primary" style="margin:0 auto;">Да</button>
                            </div>
                        </div>
                    }
                </div>
            </div>
        </div>
    </div>









    @section scripts
{
        <script src="~/Scripts/pMyBudget.js"></script>
    }
